name: '[ BUILD ] Build Project (Java/Maven)'

on:
  workflow_dispatch:
    inputs:
      release_build:
        description: 'toggles an release-build, by default false'
        type: boolean
        default: false
        required: false
      build_version:
        description: 'The version to build and deploy'
        type: string
        required: true
        default: '0-SNAPSHOT'
  workflow_call:
    inputs:
      release_build:
        description: 'toggles an release-build, by default false'
        type: boolean
        default: false
        required: false
      build_version:
        description: 'The version to build and deploy'
        type: string
        required: false
        default: '0-SNAPSHOT'
    outputs:
      build_artifact_id:
        description: 'The id of the uploaded build artifacts.'
        value: ${{ jobs.Build.outputs.build_artifacts_id}}
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_VERSION: ${{ inputs.build_version != '' && inputs.build_version || '0-SNAPSHOT' }}

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: 'maven'
          cache-dependency-path: '**/pom.xml'
          server-id: 'github'
          gpg-private-key: ${{ secrets.GPG_SIGNING_KEY }}
          gpg-passphrase: ${{ secrets.GPG_SIGNING_KEY_PASSWORD }}

      - run: echo  $GITHUB_WORKSPACE/settings.xml

      - name: Set version
        if: ${{ inputs.release_build }}
        run: ./mvnw versions:set -DnewVersion=${{ env.BUILD_VERSION }} -DgenerateBackupPoms=false

      - name: Build project, run unit and integration tests
        id: Build
        run: ./mvnw -T1C --batch-mode clean install javadoc:jar gpg:sign -Dgpg.signer=bc
        shell: bash
        env:
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_SIGNING_KEY_PASSWORD }}
          MAVEN_GPG_KEY: ${{ secrets.GPG_SIGNING_KEY }}

      - run: mkdir staging && cp target/*.jar staging
      - uses: actions/upload-artifact@v4
        with:
          name: Package
          path: staging
          retention-days: 10

      - name: Publish to GitHub Packages Apache Maven
        if: ${{ inputs.release_build }}
        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ github.token }}